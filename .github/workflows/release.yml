name: Build and Release APK

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # ✅ Dùng GITHUB_TOKEN cho Git operations
      
      - name: Switch to main branch
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          echo "Current branch: $(git branch --show-current)"
          echo "Current commit: $(git rev-parse HEAD)"
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false
      
      - name: Grant execute permission
        run: chmod +x gradlew
      
      # ✅ CẬP NHẬT: Dùng GH_PAT cho BuildConfig
      - name: Create local.properties
        run: |
          echo "github.token=${{ secrets.GH_PAT }}" > local.properties
          echo "XI_BASE_URL=${{ secrets.XI_BASE_URL }}" >> local.properties
          echo "XI_API_KEY=${{ secrets.XI_API_KEY }}" >> local.properties
          echo "XI_AGENT_ID=${{ secrets.XI_AGENT_ID }}" >> local.properties
          echo "GITHUB_OWNER=baolongdev" >> local.properties
          echo "GITHUB_REPO=appUI" >> local.properties
          echo "UPDATE_JSON_URL=https://raw.githubusercontent.com/baolongdev/appUI/main/update.json" >> local.properties
      
      - name: Decode keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > release.keystore
      
      - name: Build Release APK
        env:
          KEYSTORE_FILE: release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          XI_BASE_URL: ${{ secrets.XI_BASE_URL }}
          XI_API_KEY: ${{ secrets.XI_API_KEY }}
          XI_AGENT_ID: ${{ secrets.XI_AGENT_ID }}
          # ✅ THÊM: Pass GH_PAT as environment variable (fallback)
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          ./gradlew assembleRelease \
            --parallel \
            --max-workers=4 \
            --build-cache \
            --configuration-cache \
            --no-daemon \
            --stacktrace
      
      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "apk_name=appUI-release-$VERSION.apk" >> $GITHUB_OUTPUT
          VERSION_CODE=$(echo $VERSION | awk -F. '{print $1*10000 + $2*100 + $3}')
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
      
      - name: Rename APK
        run: |
          mv app/build/outputs/apk/release/app-release.apk \
             app/build/outputs/apk/release/${{ steps.version.outputs.apk_name }}
      
      - name: Update update.json and push
        run: |
          CURRENT_BRANCH=$(git branch --show-current)
          echo "Current branch: $CURRENT_BRANCH"
          
          if [ "$CURRENT_BRANCH" != "main" ]; then
            echo "❌ ERROR: Not on main branch!"
            exit 1
          fi
          
          RELEASE_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          
          cat > update.json << EOF
          {
            "latestVersion": "${{ steps.version.outputs.version }}",
            "latestVersionCode": ${{ steps.version.outputs.version_code }},
            "downloadUrl": "https://github.com/baolongdev/appUI/releases/download/${{ github.ref_name }}/${{ steps.version.outputs.apk_name }}",
            "releaseNotes": "Update to version ${{ steps.version.outputs.version }}",
            "mandatory": false,
            "releasedAt": "${RELEASE_DATE}"
          }
          EOF
          
          echo "Generated update.json:"
          cat update.json
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git add update.json
          if ! git diff --staged --quiet; then
            git commit -m "chore: update to version ${{ steps.version.outputs.version }}"
            git push origin main
            echo "✅ update.json pushed to main branch"
          else
            echo "ℹ️ No changes to update.json"
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/${{ steps.version.outputs.apk_name }}
          body: |
            ## 🎉 Version ${{ steps.version.outputs.version }}
            
            ### Download
            📥 [Download APK](https://github.com/baolongdev/appUI/releases/download/${{ github.ref_name }}/${{ steps.version.outputs.apk_name }})
            
            ### Update Information
            📄 [update.json](https://raw.githubusercontent.com/baolongdev/appUI/main/update.json)
            
            ---
            *Version Code: ${{ steps.version.outputs.version_code }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # ✅ Dùng GITHUB_TOKEN cho GitHub Release
